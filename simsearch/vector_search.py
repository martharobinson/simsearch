import numpy as np
import pandas as pd
import faiss

def load_embeddings(csv_path):
	"""Load CLIP embeddings from a CSV file generated by embed_with_clip."""
	df = pd.read_csv(csv_path, index_col="filename")
	embeddings = df.values.astype(np.float32)
	# Normalize embeddings to unit vectors
	norms = np.linalg.norm(embeddings, axis=1, keepdims=True)
	embeddings = embeddings / np.clip(norms, a_min=1e-8, a_max=None)
	filenames = df.index.tolist()
	return embeddings, filenames

def build_hnsw_index(embeddings, M=32, efConstruction=200):
	"""Build a FAISS HNSW index from embeddings."""
	dim = embeddings.shape[1]
	index = faiss.IndexHNSWFlat(dim, M, faiss.METRIC_INNER_PRODUCT)
	index.hnsw.efConstruction = efConstruction
	index.add(embeddings)
	return index

def search(index, query_vector, k=5):
	"""Search the HNSW index for the k nearest neighbors to the query_vector."""
	query_vector = np.asarray(query_vector, dtype=np.float32).reshape(1, -1)
	distances, indices = index.search(query_vector, k)
	return distances[0], indices[0]
